{"ast":null,"code":"var _jsxFileName = \"/Users/ckitt/Desktop/Projects/Tally/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { transactionAPI } from './api/transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXPENSE_CATEGORIES = ['Food', 'Transport', 'Entertainment', 'Shopping', 'Bills', 'Other'];\nconst INCOME_CATEGORIES = ['Salary', 'Freelance', 'Investment', 'Gift', 'Other'];\nfunction App() {\n  _s();\n  const [isSetup, setIsSetup] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [currentBudget, setCurrentBudget] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  const [formData, setFormData] = useState({\n    amount: '',\n    type: 'expense',\n    category: 'Food',\n    description: '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [setupData, setSetupData] = useState({\n    name: '',\n    budget: ''\n  });\n  const [budgetAllocations, setBudgetAllocations] = useState({\n    Food: 25,\n    Transport: 15,\n    Entertainment: 10,\n    Shopping: 20,\n    Bills: 25,\n    Other: 5\n  });\n\n  // Load transactions from backend on app start\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        const response = await transactionAPI.getAll();\n        if (response.success) {\n          // Convert backend format to frontend format\n          const frontendTransactions = response.transactions.map(t => ({\n            id: t.id,\n            amount: t.type === 'expense' ? -Math.abs(t.amount) : Math.abs(t.amount),\n            type: t.type,\n            category: t.category,\n            description: t.description,\n            date: t.date.split('T')[0] // Convert ISO to YYYY-MM-DD\n          }));\n          setTransactions(frontendTransactions);\n        }\n      } catch (error) {\n        console.error('Error loading transactions:', error);\n      }\n    };\n    if (isSetup) {\n      loadTransactions();\n    }\n  }, [isSetup]);\n  const balance = currentBudget + transactions.reduce((sum, t) => sum + t.amount, 0);\n  const displayedTransactions = showAll ? transactions : transactions.slice(0, 5);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.amount) return;\n    try {\n      // Prepare data for backend (backend handles positive/negative amounts)\n      const transactionData = {\n        amount: Math.abs(parseFloat(formData.amount)),\n        type: formData.type,\n        category: formData.category,\n        description: formData.description,\n        date: new Date(formData.date).toISOString()\n      };\n\n      // Send to backend\n      const response = await transactionAPI.create(transactionData);\n      console.log('Transaction created:', response);\n\n      // Add to local state for immediate UI update\n      const newTransaction = {\n        id: response.transaction.id,\n        amount: formData.type === 'expense' ? -Math.abs(parseFloat(formData.amount)) : Math.abs(parseFloat(formData.amount)),\n        type: formData.type,\n        category: formData.category,\n        description: formData.description,\n        date: formData.date\n      };\n      setTransactions([newTransaction, ...transactions]);\n      setFormData({\n        amount: '',\n        type: 'expense',\n        category: 'Food',\n        description: '',\n        date: new Date().toISOString().split('T')[0]\n      });\n      alert('Transaction saved successfully!');\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n      alert('Error saving transaction. Please try again.');\n    }\n  };\n  const deleteTransaction = id => {\n    setTransactions(transactions.filter(t => t.id !== id));\n  };\n  const handleSetup = e => {\n    e.preventDefault();\n    if (!setupData.name || !setupData.budget) return;\n    setUserName(setupData.name);\n    setCurrentBudget(parseFloat(setupData.budget));\n    setIsSetup(true);\n  };\n  const handleAllocationChange = (category, value) => {\n    const newValue = parseInt(value);\n    const currentTotal = Object.values(budgetAllocations).reduce((sum, val) => sum + val, 0);\n    const currentCategoryValue = budgetAllocations[category];\n    const newTotal = currentTotal - currentCategoryValue + newValue;\n    if (newTotal <= 100) {\n      setBudgetAllocations({\n        ...budgetAllocations,\n        [category]: newValue\n      });\n    }\n  };\n  const categoryColors = {\n    Food: '#ef4444',\n    Transport: '#3b82f6',\n    Entertainment: '#10b981',\n    Shopping: '#f59e0b',\n    Bills: '#8b5cf6',\n    Other: '#6b7280'\n  };\n  const createPieChart = () => {\n    const radius = 90;\n    const centerX = 100;\n    const centerY = 100;\n    let currentAngle = -90;\n    const slices = [];\n    EXPENSE_CATEGORIES.forEach(category => {\n      const percentage = budgetAllocations[category];\n      if (percentage === 0) return;\n      const angle = percentage / 100 * 360;\n      const startAngle = currentAngle;\n      const endAngle = currentAngle + angle;\n      if (percentage === 100) {\n        slices.push({\n          category,\n          pathData: `M ${centerX} ${centerY} m -${radius} 0 a ${radius} ${radius} 0 1 0 ${radius * 2} 0 a ${radius} ${radius} 0 1 0 -${radius * 2} 0`,\n          color: categoryColors[category],\n          percentage\n        });\n        return;\n      }\n      const x1 = centerX + radius * Math.cos(startAngle * Math.PI / 180);\n      const y1 = centerY + radius * Math.sin(startAngle * Math.PI / 180);\n      const x2 = centerX + radius * Math.cos(endAngle * Math.PI / 180);\n      const y2 = centerY + radius * Math.sin(endAngle * Math.PI / 180);\n      const largeArcFlag = angle > 180 ? 1 : 0;\n      const pathData = [`M ${centerX} ${centerY}`, `L ${x1} ${y1}`, `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`, 'Z'].join(' ');\n      slices.push({\n        category,\n        pathData,\n        color: categoryColors[category],\n        percentage\n      });\n      currentAngle = endAngle;\n    });\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"200\",\n      viewBox: \"0 0 200 200\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: centerX,\n        cy: centerY,\n        r: radius,\n        fill: \"#374151\",\n        stroke: \"white\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), slices.map(slice => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: slice.pathData,\n        fill: slice.color,\n        stroke: \"white\",\n        strokeWidth: \"2\"\n      }, slice.category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  };\n  const getBalanceClass = () => {\n    if (balance > 0) return 'positive';\n    if (balance < 0) return 'negative';\n    return 'zero';\n  };\n  if (!isSetup) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth-title\",\n        children: \"Tally\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSetup,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: setupData.name,\n            onChange: e => setSetupData({\n              ...setupData,\n              name: e.target.value\n            }),\n            placeholder: \"Enter your name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Current Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            value: setupData.budget,\n            onChange: e => setSetupData({\n              ...setupData,\n              budget: e.target.value\n            }),\n            placeholder: \"0.00\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [\"Hello, \", userName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-label\",\n          children: [\"Monthly Budget: $\", currentBudget.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `balance ${getBalanceClass()}`,\n          children: [\"Amount Remaining: $\", balance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"transaction-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"0.00\",\n              value: formData.amount,\n              onChange: e => setFormData({\n                ...formData,\n                amount: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"expense\",\n                  checked: formData.type === 'expense',\n                  onChange: e => setFormData({\n                    ...formData,\n                    type: e.target.value,\n                    category: e.target.value === 'expense' ? 'Food' : 'Salary'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 17\n                }, this), \"Expense\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"income\",\n                  checked: formData.type === 'income',\n                  onChange: e => setFormData({\n                    ...formData,\n                    type: e.target.value,\n                    category: e.target.value === 'expense' ? 'Food' : 'Salary'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 17\n                }, this), \"Income\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.category,\n                onChange: e => setFormData({\n                  ...formData,\n                  category: e.target.value\n                }),\n                children: (formData.type === 'expense' ? EXPENSE_CATEGORIES : INCOME_CATEGORIES).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: formData.date,\n                onChange: e => setFormData({\n                  ...formData,\n                  date: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Optional description\",\n              value: formData.description,\n              onChange: e => setFormData({\n                ...formData,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"add-btn\",\n            children: \"Add Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Transaction History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-list\",\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `transaction-dot ${transaction.type}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `transaction-amount ${transaction.type}`,\n                children: [transaction.type === 'expense' ? '-' : '+', \"$\", Math.abs(transaction.amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-category\",\n                children: transaction.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-date\",\n                children: new Date(transaction.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transaction-description\",\n                children: [\"\\\"\", transaction.description, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => deleteTransaction(transaction.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-allocation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"allocation-section\",\n            children: EXPENSE_CATEGORIES.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allocation-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: 100 - (Object.values(budgetAllocations).reduce((sum, val) => sum + val, 0) - budgetAllocations[category]),\n                value: budgetAllocations[category],\n                onChange: e => handleAllocationChange(category, e.target.value),\n                className: \"slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                max: 100 - (Object.values(budgetAllocations).reduce((sum, val) => sum + val, 0) - budgetAllocations[category]),\n                value: budgetAllocations[category],\n                onChange: e => handleAllocationChange(category, e.target.value),\n                className: \"allocation-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"percent-symbol\",\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie-chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pie-chart\",\n              children: createPieChart()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pie-legend\",\n              children: EXPENSE_CATEGORIES.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"legend-color\",\n                  style: {\n                    backgroundColor: categoryColors[category]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [category, \": $\", (budgetAllocations[category] / 100 * currentBudget).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this)]\n              }, category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IoMSwEyM0kUfunBzBNWQ+88eaOs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","transactionAPI","jsxDEV","_jsxDEV","EXPENSE_CATEGORIES","INCOME_CATEGORIES","App","_s","isSetup","setIsSetup","userName","setUserName","currentBudget","setCurrentBudget","transactions","setTransactions","showAll","setShowAll","formData","setFormData","amount","type","category","description","date","Date","toISOString","split","setupData","setSetupData","name","budget","budgetAllocations","setBudgetAllocations","Food","Transport","Entertainment","Shopping","Bills","Other","loadTransactions","response","getAll","success","frontendTransactions","map","t","id","Math","abs","error","console","balance","reduce","sum","displayedTransactions","slice","handleSubmit","e","preventDefault","transactionData","parseFloat","create","log","newTransaction","transaction","alert","deleteTransaction","filter","handleSetup","handleAllocationChange","value","newValue","parseInt","currentTotal","Object","values","val","currentCategoryValue","newTotal","categoryColors","createPieChart","radius","centerX","centerY","currentAngle","slices","forEach","percentage","angle","startAngle","endAngle","push","pathData","color","x1","cos","PI","y1","sin","x2","y2","largeArcFlag","join","width","height","viewBox","children","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","d","getBalanceClass","className","onSubmit","onChange","target","placeholder","required","step","toFixed","checked","cat","toLocaleDateString","onClick","min","max","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/ckitt/Desktop/Projects/Tally/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { transactionAPI } from './api/transactions';\n\nconst EXPENSE_CATEGORIES = ['Food', 'Transport', 'Entertainment', 'Shopping', 'Bills', 'Other'];\nconst INCOME_CATEGORIES = ['Salary', 'Freelance', 'Investment', 'Gift', 'Other'];\n\nfunction App() {\n  const [isSetup, setIsSetup] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [currentBudget, setCurrentBudget] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  const [formData, setFormData] = useState({\n    amount: '',\n    type: 'expense',\n    category: 'Food',\n    description: '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [setupData, setSetupData] = useState({\n    name: '',\n    budget: ''\n  });\n  const [budgetAllocations, setBudgetAllocations] = useState({\n    Food: 25,\n    Transport: 15,\n    Entertainment: 10,\n    Shopping: 20,\n    Bills: 25,\n    Other: 5\n  });\n\n  // Load transactions from backend on app start\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        const response = await transactionAPI.getAll();\n        if (response.success) {\n          // Convert backend format to frontend format\n          const frontendTransactions = response.transactions.map(t => ({\n            id: t.id,\n            amount: t.type === 'expense' ? -Math.abs(t.amount) : Math.abs(t.amount),\n            type: t.type,\n            category: t.category,\n            description: t.description,\n            date: t.date.split('T')[0] // Convert ISO to YYYY-MM-DD\n          }));\n          setTransactions(frontendTransactions);\n        }\n      } catch (error) {\n        console.error('Error loading transactions:', error);\n      }\n    };\n\n    if (isSetup) {\n      loadTransactions();\n    }\n  }, [isSetup]);\n\n  const balance = currentBudget + transactions.reduce((sum, t) => sum + t.amount, 0);\n  const displayedTransactions = showAll ? transactions : transactions.slice(0, 5);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.amount) return;\n\n    try {\n      // Prepare data for backend (backend handles positive/negative amounts)\n      const transactionData = {\n        amount: Math.abs(parseFloat(formData.amount)),\n        type: formData.type,\n        category: formData.category,\n        description: formData.description,\n        date: new Date(formData.date).toISOString()\n      };\n\n      // Send to backend\n      const response = await transactionAPI.create(transactionData);\n      console.log('Transaction created:', response);\n\n      // Add to local state for immediate UI update\n      const newTransaction = {\n        id: response.transaction.id,\n        amount: formData.type === 'expense' ? -Math.abs(parseFloat(formData.amount)) : Math.abs(parseFloat(formData.amount)),\n        type: formData.type,\n        category: formData.category,\n        description: formData.description,\n        date: formData.date\n      };\n\n      setTransactions([newTransaction, ...transactions]);\n      setFormData({\n        amount: '',\n        type: 'expense',\n        category: 'Food',\n        description: '',\n        date: new Date().toISOString().split('T')[0]\n      });\n\n      alert('Transaction saved successfully!');\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n      alert('Error saving transaction. Please try again.');\n    }\n  };\n\n  const deleteTransaction = (id) => {\n    setTransactions(transactions.filter(t => t.id !== id));\n  };\n\n\n  const handleSetup = (e) => {\n    e.preventDefault();\n    if (!setupData.name || !setupData.budget) return;\n\n    setUserName(setupData.name);\n    setCurrentBudget(parseFloat(setupData.budget));\n    setIsSetup(true);\n  };\n\n  const handleAllocationChange = (category, value) => {\n    const newValue = parseInt(value);\n    const currentTotal = Object.values(budgetAllocations).reduce((sum, val) => sum + val, 0);\n    const currentCategoryValue = budgetAllocations[category];\n    const newTotal = currentTotal - currentCategoryValue + newValue;\n\n    if (newTotal <= 100) {\n      setBudgetAllocations({\n        ...budgetAllocations,\n        [category]: newValue\n      });\n    }\n  };\n\n  const categoryColors = {\n    Food: '#ef4444',\n    Transport: '#3b82f6',\n    Entertainment: '#10b981',\n    Shopping: '#f59e0b',\n    Bills: '#8b5cf6',\n    Other: '#6b7280'\n  };\n\n  const createPieChart = () => {\n    const radius = 90;\n    const centerX = 100;\n    const centerY = 100;\n    let currentAngle = -90;\n\n    const slices = [];\n\n    EXPENSE_CATEGORIES.forEach(category => {\n      const percentage = budgetAllocations[category];\n      if (percentage === 0) return;\n\n      const angle = (percentage / 100) * 360;\n      const startAngle = currentAngle;\n      const endAngle = currentAngle + angle;\n\n      if (percentage === 100) {\n        slices.push({\n          category,\n          pathData: `M ${centerX} ${centerY} m -${radius} 0 a ${radius} ${radius} 0 1 0 ${radius * 2} 0 a ${radius} ${radius} 0 1 0 -${radius * 2} 0`,\n          color: categoryColors[category],\n          percentage\n        });\n        return;\n      }\n\n      const x1 = centerX + radius * Math.cos((startAngle * Math.PI) / 180);\n      const y1 = centerY + radius * Math.sin((startAngle * Math.PI) / 180);\n      const x2 = centerX + radius * Math.cos((endAngle * Math.PI) / 180);\n      const y2 = centerY + radius * Math.sin((endAngle * Math.PI) / 180);\n\n      const largeArcFlag = angle > 180 ? 1 : 0;\n\n      const pathData = [\n        `M ${centerX} ${centerY}`,\n        `L ${x1} ${y1}`,\n        `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n        'Z'\n      ].join(' ');\n\n      slices.push({\n        category,\n        pathData,\n        color: categoryColors[category],\n        percentage\n      });\n\n      currentAngle = endAngle;\n    });\n\n    return (\n      <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n        <circle\n          cx={centerX}\n          cy={centerY}\n          r={radius}\n          fill=\"#374151\"\n          stroke=\"white\"\n          strokeWidth=\"2\"\n        />\n        {slices.map(slice => (\n          <path\n            key={slice.category}\n            d={slice.pathData}\n            fill={slice.color}\n            stroke=\"white\"\n            strokeWidth=\"2\"\n          />\n        ))}\n      </svg>\n    );\n  };\n\n  const getBalanceClass = () => {\n    if (balance > 0) return 'positive';\n    if (balance < 0) return 'negative';\n    return 'zero';\n  };\n\n  if (!isSetup) {\n    return (\n      <div className=\"auth-form\">\n        <h1 className=\"auth-title\">Tally</h1>\n        <form onSubmit={handleSetup}>\n          <div className=\"form-group\">\n            <label>Your Name</label>\n            <input\n              type=\"text\"\n              value={setupData.name}\n              onChange={(e) => setSetupData({...setupData, name: e.target.value})}\n              placeholder=\"Enter your name\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Current Budget</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={setupData.budget}\n              onChange={(e) => setSetupData({...setupData, budget: e.target.value})}\n              placeholder=\"0.00\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-btn\">\n            Get Started\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"main-layout\">\n      <div className=\"main-header\">\n        <h1 className=\"title\">Hello, {userName}!</h1>\n        <div className=\"budget-info\">\n          <div className=\"budget-label\">Monthly Budget: ${currentBudget.toFixed(2)}</div>\n          <div className={`balance ${getBalanceClass()}`}>\n            Amount Remaining: ${balance.toFixed(2)}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panels-container\">\n        <div className=\"left-panel\">\n          <form className=\"transaction-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              placeholder=\"0.00\"\n              value={formData.amount}\n              onChange={(e) => setFormData({...formData, amount: e.target.value})}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Type</label>\n            <div className=\"radio-group\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"expense\"\n                  checked={formData.type === 'expense'}\n                  onChange={(e) => setFormData({\n                    ...formData,\n                    type: e.target.value,\n                    category: e.target.value === 'expense' ? 'Food' : 'Salary'\n                  })}\n                />\n                Expense\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"income\"\n                  checked={formData.type === 'income'}\n                  onChange={(e) => setFormData({\n                    ...formData,\n                    type: e.target.value,\n                    category: e.target.value === 'expense' ? 'Food' : 'Salary'\n                  })}\n                />\n                Income\n              </label>\n            </div>\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Category</label>\n              <select\n                value={formData.category}\n                onChange={(e) => setFormData({...formData, category: e.target.value})}\n              >\n                {(formData.type === 'expense' ? EXPENSE_CATEGORIES : INCOME_CATEGORIES).map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label>Date</label>\n              <input\n                type=\"date\"\n                value={formData.date}\n                onChange={(e) => setFormData({...formData, date: e.target.value})}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Description</label>\n            <input\n              type=\"text\"\n              placeholder=\"Optional description\"\n              value={formData.description}\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\n            />\n          </div>\n          <button type=\"submit\" className=\"add-btn\">Add Transaction</button>\n        </form>\n        </div>\n\n        <div className=\"middle-panel\">\n          <h3>Transaction History</h3>\n          <div className=\"transaction-list\">\n            {transactions.map(transaction => (\n              <div key={transaction.id} className=\"transaction-item\">\n                <div className=\"transaction-info\">\n                  <div className={`transaction-dot ${transaction.type}`}></div>\n                  <div className={`transaction-amount ${transaction.type}`}>\n                    {transaction.type === 'expense' ? '-' : '+'}${Math.abs(transaction.amount).toFixed(2)}\n                  </div>\n                  <div className=\"transaction-category\">{transaction.category}</div>\n                  <div className=\"transaction-date\">{new Date(transaction.date).toLocaleDateString()}</div>\n                  <div className=\"transaction-description\">\"{transaction.description}\"</div>\n                </div>\n                <button\n                  className=\"delete-btn\"\n                  onClick={() => deleteTransaction(transaction.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"right-panel\">\n          <div className=\"budget-allocation\">\n            <div className=\"allocation-section\">\n              {EXPENSE_CATEGORIES.map(category => (\n                <div key={category} className=\"allocation-item\">\n                  <label>{category}</label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max={100 - (Object.values(budgetAllocations).reduce((sum, val) => sum + val, 0) - budgetAllocations[category])}\n                    value={budgetAllocations[category]}\n                    onChange={(e) => handleAllocationChange(category, e.target.value)}\n                    className=\"slider\"\n                  />\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max={100 - (Object.values(budgetAllocations).reduce((sum, val) => sum + val, 0) - budgetAllocations[category])}\n                    value={budgetAllocations[category]}\n                    onChange={(e) => handleAllocationChange(category, e.target.value)}\n                    className=\"allocation-input\"\n                  />\n                  <span className=\"percent-symbol\">%</span>\n                </div>\n              ))}\n            </div>\n            <div className=\"pie-chart-container\">\n              <div className=\"pie-chart\">\n                {createPieChart()}\n              </div>\n              <div className=\"pie-legend\">\n                {EXPENSE_CATEGORIES.map(category => (\n                  <div key={category} className=\"legend-item\">\n                    <div\n                      className=\"legend-color\"\n                      style={{ backgroundColor: categoryColors[category] }}\n                    ></div>\n                    <span>{category}: ${((budgetAllocations[category] / 100) * currentBudget).toFixed(2)}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}